---
import {apiClient} from "@lib/api/api-client";
import GlobalLayout from "../../layouts/GlobalLayout/GlobalLayout.astro";
import {BlogPost} from "../../lib/api/types/content/blog-post";
import ContentHero from "../../components/ContentHero/ContentHero.astro";
import {JArrowLink, JBadge} from "@ben-ryder/jigsaw-react";
import CardSimpleListing from "../../components/CardSimpleListing/CardSimpleListing.astro";

export async function getStaticPaths() {
	const blogPosts = await apiClient.getBlogPosts()

	return blogPosts.map((blogPost) => ({
		params: { slug: blogPost.slug },
		props: blogPost,
	}));
}

const blogPost: BlogPost = Astro.props;
---

<GlobalLayout title={blogPost.title}>
	<ContentHero
		title={blogPost.title}
	/>

	<div class="max-width-container">
		<JArrowLink href="/blog" direction="left">All Blog Posts</JArrowLink>
	</div>

	<ul>
		<li><strong>Created At</strong>{blogPost.createdAt}</li>
		{blogPost.updatedAt && <li><span>Updated At</span> {blogPost.updatedAt}</li>}
	</ul>

	<ul>
		{blogPost.tags.map(tag =>
			<li>
				<JBadge
					href={`/blog/?tags=${tag.slug}`}
					variant={tag.colour}
					text={tag.text}
				/>
			</li>
		)}
	</ul>

	<div class="max-width-container">
		<div class="j-prose" set:html={blogPost.contentHtml} />
	</div>

	{(blogPost.relatedProjects.length > 0 || blogPost.relatedBlogPosts.length > 0) &&
		<div class="max-width-container j-prose">
			<hr />
		</div>
	}

	{blogPost.relatedProjects.length > 0 &&
		<CardSimpleListing
			title="Related Projects"
			cards={blogPost.relatedProjects.map(project => {
				return {
					title: project.name,
					description: project.description,
					link: `/projects/${project.slug}`
				}
			})}
		/>
	}

	{blogPost.relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="Related Blog Posts"
			cards={blogPost.relatedBlogPosts.map(blogPost => {
				return {
					title: blogPost.title,
					description: blogPost.description,
					link: `/blog/${blogPost.slug}`
				}
			})}
		/>
	}
</GlobalLayout>
