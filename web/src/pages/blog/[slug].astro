---
import { getCollection, getEntries } from 'astro:content';

import GlobalLayout from "../../patterns/layouts/GlobalLayout/GlobalLayout.astro";
import ContentHero from "../../patterns/components/ContentHero/ContentHero.astro";
import {JArrowLink} from "@ben-ryder/jigsaw-react";
import CardSimpleListing from "../../patterns/components/CardSimpleListing/CardSimpleListing.astro";
import {formatTimestamp} from "../../utils/format-timestamp";
import {getReadingTime} from "../../utils/get-reading-time";

export async function getStaticPaths() {
	const blogPosts = await getCollection('blog-posts');
	return blogPosts.map(blogPost => ({
		params: { slug: blogPost.slug }, props: { blogPost },
	}));
}

const { blogPost } = Astro.props;
const { Content } = await blogPost.render();

const tags = await getEntries(blogPost.data.tags)
const relatedProjects = await getEntries(blogPost.data.relatedProjects)
const relatedBlogPosts = await getEntries(blogPost.data.relatedBlogPosts)

const metadata = [
	[
		{
			icon: "clock",
			text: getReadingTime(blogPost.body)
		},
	],
	[
		{
			icon: "calendar",
			text: `Published ${formatTimestamp(blogPost.data.createdAt)}`,
		}
	]
]
if (blogPost.data.updatedAt) {
	metadata[1].push({
		icon: "pencil",
		text: `Updated ${formatTimestamp(blogPost.data.updatedAt)}`,
	})
}
---

<GlobalLayout title={blogPost.data.title}>
	<ContentHero
		title={blogPost.data.title}
		metadata={metadata}
		tags={tags}
		tagsBaseUrl="/blog?tags="
	/>

	<div class="max-width-container container-spacing">
		<JArrowLink href="/blog" direction="left">All Blog Posts</JArrowLink>
	</div>

	<div class="max-width-container">
		<div class="j-prose">
			<Content />
		</div>
	</div>

	{(relatedProjects.length > 0 || relatedBlogPosts.length > 0) &&
		<div class="max-width-container j-prose">
			<hr />
		</div>
	}

	{relatedProjects.length > 0 &&
		<CardSimpleListing
			title="👨‍💻 Related Projects"
			cards={relatedProjects.map(project => {
				return {
					title: project.data.title,
					description: project.data.description,
					link: `/projects/${project.slug}`
				}
			})}
		/>
	}

	{relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="🗒️ Related Blog Posts"
			cards={blogPost.relatedBlogPosts.map(blogPost => {
				return {
					title: blogPost.data.title,
					description: blogPost.data.description,
					link: `/blog/${blogPost.slug}`
				}
			})}
		/>
	}
</GlobalLayout>
