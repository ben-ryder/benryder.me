---
import {apiClient} from "@lib/api/api-client";
import {Project} from "@lib/api/types/content/project";
import GlobalLayout from "../../layouts/GlobalLayout/GlobalLayout.astro";
import ContentHero from "../../components/ContentHero/ContentHero.astro";
import {JArrowLink, JBadge} from "@ben-ryder/jigsaw-react";
import CardSimpleListing from "../../components/CardSimpleListing/CardSimpleListing.astro";

export async function getStaticPaths() {
	const projects = await apiClient.getProjects()

	return projects.map((project) => ({
		params: { slug: project.slug },
		props: project,
	}));
}

const project: Project = Astro.props;
---

<GlobalLayout title={project.name}>
	<ContentHero
		title={project.name}
	/>

	<div class="max-width-container">
		<JArrowLink href="/projects" direction="left">All Projects</JArrowLink>
	</div>

	<ul>
		<li><strong>Created At</strong>{project.createdAt}</li>
		{project.updatedAt && <li><span>Updated At</span> {project.updatedAt}</li>}
		{project.productUrl && <li><span>Link</span>{project.productUrl}</li>}
		{project.repositoryUrl && <li><span>Source Code</span>{project.repositoryUrl}</li>}
		{project.releaseDate && <li><span>Release Date</span>{project.releaseDate}</li>}
	</ul>

	<ul>
		{project.tags.map(tag =>
			<li>
				<JBadge
					href={`/projects/?tags=${tag.slug}`}
					variant={tag.colour}
					text={tag.text}
				/>
			</li>
		)}
	</ul>

	<div class="max-width-container">
		<div class="j-prose" set:html={project.contentHtml} />
	</div>

	{(project.relatedProjects.length > 0 || project.relatedBlogPosts.length > 0) &&
		<div class="max-width-container j-prose">
			<hr />
		</div>
	}

	{project.relatedProjects.length > 0 &&
		<CardSimpleListing
			title="Related Projects"
			cards={project.relatedProjects.map(project => {
				return {
					title: project.name,
					description: project.description,
					link: `/projects/${project.slug}`
				}
			})}
		/>
	}

	{project.relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="Related Blog Posts"
			cards={project.relatedBlogPosts.map(blogPost => {
				return {
					title: blogPost.title,
					description: blogPost.description,
					link: `/blog/${blogPost.slug}`
				}
			})}
		/>
	}
</GlobalLayout>
