---
import { getCollection } from 'astro:content';
import {getEntries, render} from "astro:content";

import {JArrowLink} from "@ben-ryder/jigsaw-react"

import GlobalLayout from "../../patterns/layouts/GlobalLayout/GlobalLayout.astro";
import ContentHero from "../../patterns/components/ContentHero/ContentHero.astro";
import CardSimpleListing from "../../patterns/components/CardSimpleListing/CardSimpleListing.astro";
import {formatTimestamp} from "../../utils/format-timestamp";
import {getReadingTime} from "../../utils/get-reading-time";

export async function getStaticPaths() {
	const projects = await getCollection('projects');
	return projects.map(project => ({
		params: { slug: project.id }, props: { project },
	}));
}

const { project } = Astro.props;
const { Content } = await render(project);

const tags = await getEntries(project.data.tags ?? [])
const relatedProjects = await getEntries(project.data.relatedProjects ?? [])
const relatedBlogPosts = await getEntries(project.data.relatedBlogPosts ?? [])
const relatedPosts = await getEntries(project.data.relatedPosts ?? [])

const metadata = []

const projectMetadata = []
if (project.data.productUrl) {
	projectMetadata.push({
		icon: "globe",
		text: `Live Project`,
		link: project.data.productUrl
	})
}
if (project.data.repositoryUrl) {
	projectMetadata.push({
		icon: "github",
		text: `Source Code`,
		link: project.data.repositoryUrl
	})
}
if (projectMetadata.length > 0) {
	metadata.push(projectMetadata)
}

const generalMetadata = [
	{
		icon: "calendar",
		text: `Published ${formatTimestamp(project.data.createdAt)}`,
	}
]
if (project.data.updatedAt) {
	generalMetadata.push({
		icon: "pencil",
		text: `Updated ${formatTimestamp(project.data.updatedAt)}`,
	})
}
generalMetadata.push({
	icon: "clock",
	text: getReadingTime(project.body ?? "")
})
metadata.push(generalMetadata)


---

<GlobalLayout title={project.data.title}>
	<ContentHero
		title={project.data.title}
		metadata={metadata}
		tags={tags}
		tagsBaseUrl="/projects/tags/"
	/>

	<div class="max-width-container container-spacing">
			<JArrowLink
							href="/projects"
							direction="left"
			>All Projects</JArrowLink>
	</div>

	<div class="max-width-container">
		<div class="j-prose">
			<Content />
		</div>
	</div>

	{(relatedProjects.length > 0 || relatedBlogPosts.length > 0 || relatedPosts.length > 0) &&
		<div class="max-width-container j-prose">
				<hr />
		</div>
	}

	{relatedProjects.length > 0 &&
		<CardSimpleListing
			title="👨‍💻 Related Projects"
			cards={relatedProjects.map(project => {
				return {
					title: project.data.title,
					description: project.data.description,
					link: `/projects/${project.id}`
				}
			})}
		/>
	}

	{relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="📝 Related Blog Posts"
			cards={relatedBlogPosts.map(blogPost => {
				return {
					title: blogPost.data.title,
					description: blogPost.data.description,
					link: `/blog/${blogPost.id}`
				}
			})}
		/>
	}

	{relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="🤔 Related Guides"
			cards={relatedPosts.map(guide => {
				return {
					title: guide.data.title,
					description: guide.data.description,
					link: `/guides/${guide.id}`
				}
			})}
		/>
	}
</GlobalLayout>
