---
import {apiClient} from "@lib/api/api-client";
import {Project} from "@lib/api/types/content/project";
import GlobalLayout from "../../layouts/GlobalLayout/GlobalLayout.astro";
import ContentHero from "../../components/ContentHero/ContentHero.astro";
import {JArrowLink, JBadge} from "@ben-ryder/jigsaw-react";
import CardSimpleListing from "../../components/CardSimpleListing/CardSimpleListing.astro";
import {formatTimestamp} from "../../lib/api/utils/format-timestamp";

export async function getStaticPaths() {
	const projects = await apiClient.getProjects()

	return projects.map((project) => ({
		params: { slug: project.slug },
		props: project,
	}));
}

const project: Project = Astro.props;

const metadata = []
if (project.productUrl) {
	metadata.push({
		icon: "globe",
		text: `Live Project`,
		link: project.productUrl
	})
}
if (project.repositoryUrl) {
	metadata.push({
		icon: "github",
		text: `Source Code`,
		link: project.repositoryUrl
	})
}
metadata.push({
	icon: "calendar",
	text: `Published ${formatTimestamp(project.datePublished || project.dateCreated)}`,
})
if (project.dateUpdated) {
	metadata.push({
		icon: "pencil",
		text: `Updated ${formatTimestamp(project.dateUpdated)}`,
	})
}
metadata.push({
	icon: "clock",
	text: `X min read`
})


---

<GlobalLayout title={project.name}>
	<ContentHero
		title={project.name}
		metadata={metadata}
		tags={project.tags}
	/>

	<div class="max-width-container">
		<JArrowLink href="/projects" direction="left">All Projects</JArrowLink>
	</div>

	<div class="max-width-container">
		<div class="j-prose" set:html={project.contentHtml} />
	</div>

	{(project.relatedProjects.length > 0 || project.relatedBlogPosts.length > 0) &&
		<div class="max-width-container j-prose">
			<hr />
		</div>
	}

	{project.relatedProjects.length > 0 &&
		<CardSimpleListing
			title="👨‍💻 Related Projects"
			cards={project.relatedProjects.map(project => {
				return {
					title: project.name,
					description: project.description,
					link: `/projects/${project.slug}`
				}
			})}
		/>
	}

	{project.relatedBlogPosts.length > 0 &&
		<CardSimpleListing
			title="🗒️ Related Blog Posts"
			cards={project.relatedBlogPosts.map(blogPost => {
				return {
					title: blogPost.title,
					description: blogPost.description,
					link: `/blog/${blogPost.slug}`
				}
			})}
		/>
	}
</GlobalLayout>
