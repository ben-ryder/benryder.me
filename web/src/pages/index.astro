---
import {getCollection} from "astro:content";

import GlobalLayout from '../patterns/layouts/GlobalLayout/GlobalLayout.astro';
import Greeter from "../patterns/components/Greeter/Greeter.astro";
import CardSimpleListing from "../patterns/components/CardSimpleListing/CardSimpleListing.astro";

import directus from "../lib/directus";
import {readSingleton} from "@directus/sdk";
import { createMarkdownProcessor } from '@astrojs/markdown-remark';

const homeContent = await directus.request(readSingleton('home'));

// Use the Astro flavoured remark parser for markdown.
// IMPORTANT: this works but is not an officially exposed public API. It is also missing the configuration content collections get. For info, see:
// - https://github.com/withastro/docs/issues/9543#issuecomment-2480813302
// - https://github.com/withastro/roadmap/discussions/1094
const processor = await createMarkdownProcessor();
const {code: greeterHtml} = await processor.render(homeContent.greeter)

const socialLinks = [
    {
        text: "GitHub",
        url: "https://github.com/ben-ryder",
        iconCode: "github"
    },
    {
        text: "LinkedIn",
        url: "https://www.linkedin.com/in/benryderdev",
        iconCode: "linkedin"
    }
]

const featuredProjects = await getCollection('projects', ({data}) => {
	return data.featured
})
const featuredPosts = await getCollection('posts', ({data}) => {
    return data.featured
})

---

<GlobalLayout title="Home">
	<Greeter
		contentHtml={greeterHtml}
		socialLinks={socialLinks}
	/>

	<CardSimpleListing
		title="👨‍💻 Projects"
		viewAllText="All Projects"
		viewAllLink="/projects"
		cards={featuredProjects.map(project => {
			return {
				title: project.data.name,
				description: project.data.description,
				link: `/projects/${project.id}`
			}
		})}
	/>

    <CardSimpleListing
			title="📝 Posts"
			viewAllText="All Posts"
			viewAllLink="/posts"
			cards={featuredPosts.map(post => {
				return {
					title: post.data.name,
					description: post.data.description,
					link: `/posts/${post.id}`
				}
			})}
    />

</GlobalLayout>
